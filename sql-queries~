SELECT A.*, S1.name AS skill1name, S2.name AS skill2name, S3.name AS skill3name FROM armor A
LEFT JOIN skill S1
ON S1.id = A.skill1
LEFT JOIN skill S2
ON S2.id = A.skill2
LEFT JOIN skill S3
ON S3.id = A.skill3;


SELECT *
FROM armor A
LEFT JOIN (SELECT s1.armorid, s1.skillid AS skill1, s1.amount AS amount1, s2.skillid AS skill2, s2.amount AS amount2, s3.skillid AS skill3, s3.amount AS amount3
FROM armor_skill s1, armor_skill s2, armor_skill s3
WHERE s1.skillid < s2.skillid
AND s1.skillid < s3.skillid
AND s2.skillid < s3.skillid
AND s1.armorid = s2.armorid 
AND s1.armorid = s3.armorid) B ON (A.id = B.armorid)
LEFT JOIN (SELECT foo.* FROM
(SELECT s1.armorid, s1.skillid AS skill1, s1.amount AS amount1, s2.skillid AS skill2, s2.amount AS amount2
FROM armor_skill s1, armor_skill s2, armor_skill s3
WHERE s1.skillid < s2.skillid
AND s1.skillid = s3.skillid
AND s1.armorid = s2.armorid 
AND s1.armorid = s3.armorid
GROUP BY s1.armorid, skill1, amount1, skill2, amount2) foo
INNER JOIN
(SELECT armorid, count(armorid) FROM armor_skill
GROUP BY armorid) bar
ON foo.armorid = bar.armorid
WHERE bar.count = 2
ORDER BY foo.armorid) C ON A.id = C.armorid
ORDER BY A.id ASC;

SELECT a.*, s1.skillid, s1.amount, s2.skillid, s2.amount
FROM armor a
JOIN armor_skill s1 ON (a.id = s1.armorid)
LEFT OUTER JOIN armor_skill s2 ON (a.id = s2.armorid AND 
    (s1.id < s2.id))
ORDER BY a.id ASC;

SELECT armor.id, name, skillid, amount, COUNT(armor_skill.armorid)
FROM armor_skill 
JOIN armor ON armor.id=armor_skill.armorid
GROUP BY armor.id, name, skillid, amount
ORDER BY armor.id DESC;


SELECT a.*, s1.skillid, s1.amount
FROM armor a
JOIN armor_skill s1 ON (a.id = s1.armorid)
ORDER BY a.id ASC;

kolmoset 1455
SELECT s1.armorid, s1.skillid AS skill1, s1.amount AS amount1, s2.skillid AS skill2, s2.amount AS amount2, s3.skillid AS skill3, s3.amount AS amount3
FROM armor_skill s1, armor_skill s2, armor_skill s3
WHERE s1.skillid < s2.skillid
AND s1.skillid < s3.skillid
AND s2.skillid < s3.skillid
AND s1.armorid = s2.armorid 
AND s1.armorid = s3.armorid;

ORDER BY s1.armorid
RIGHT JOIN armor_skill s4 
ON (s1.id = s4.id AND
s1.skillid = s4.skillid)

SELECT s1.armorid, s1.skillid AS skill1, s1.amount AS amount1, s2.skillid AS skill2, s2.amount AS amount2
FROM armor_skill s1, armor_skill s2
WHERE s1.skillid < s2.skillid
AND s1.armorid = s2.armorid 
ORDER BY s1.armorid;

kakkoset 1078
SELECT foo.* FROM
(SELECT s1.armorid, s1.skillid AS skill1, s1.amount AS amount1, s2.skillid AS skill2, s2.amount AS amount2
FROM armor_skill s1, armor_skill s2, armor_skill s3
WHERE s1.skillid < s2.skillid
AND s1.skillid = s3.skillid
AND s1.armorid = s2.armorid 
AND s1.armorid = s3.armorid
GROUP BY s1.armorid, skill1, amount1, skill2, amount2) foo
INNER JOIN
(SELECT armorid, count(armorid) FROM armor_skill
GROUP BY armorid) bar
ON foo.armorid = bar.armorid
WHERE bar.count = 2
ORDER BY foo.armorid;

SELECT * FROM
(SELECT armorid, skillid, amount, count(armorid) FROM armor_skill
GROUP BY armorid, skillid, amount) slot1
WHERE count = 1
ORDER BY armorid ASC;

ykkÃ¶set 564
SELECT A.armorid, A.skillid, A.amount FROM armor_skill A
JOIN
(SELECT armorid, count(armorid) FROM armor_skill
GROUP BY armorid) B
ON A.armorid = B.armorid
AND count = 1
ORDER BY armorid ASC;

SELECT * FROM (SELECT * FROM
(SELECT armorid, count(armorid) FROM armor_skill
GROUP BY armorid) A
WHERE count = 3) B
LEFT JOIN
(SELECT s1.armorid, s1.skillid AS skill1, s1.amount AS amount1, s2.skillid AS skill2, s2.amount AS amount2, s3.skillid AS skill3, s3.amount AS amount3
FROM armor_skill s1, armor_skill s2, armor_skill s3
WHERE s1.skillid < s2.skillid
AND s1.skillid < s3.skillid
AND s2.skillid < s3.skillid
AND s1.armorid = s2.armorid 
AND s1.armorid = s3.armorid) C
ON B.armorid = C.armorid
ORDER BY B.armorid ASC;


INSERT INTO armorset (head_id, torso_id, arms_id, waist_id, feet_id) VALUES(13, 1000, 2000, 500, 3000);

SELECT A.name AS head, B.name AS torso, C.name AS arms, D.name AS waist, E.name AS feet FROM armorset
JOIN armor A
ON head_id = A.id
JOIN armor B
ON torso_id = B.id
JOIN armor C
ON arms_id = C.id
JOIN armor D
ON waist_id = D.id
JOIN armor E
ON feet_id = E.id;

SELECT decoration.*, skill.name AS skillname FROM decoration
JOIN skill
ON skill.id = decoration.skill1id;

INSERT INTO armorset (head_id, torso_id, arms_id, waist_id, feet_id) VALUES (1, 2, 3, 4, 5)
    ON CONFLICT DO UPDATE head_id = NULL WHERE FALSE
    RETURNING id;
